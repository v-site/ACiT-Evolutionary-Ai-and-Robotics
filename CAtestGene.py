import gym
import CAutil

genome = '00110111000010011000000010010111010011001011101000000010011001001010110111010100101010101110011011000011011001110101111111010011'
#10101011101011110101101000001011011110101011100001111110011101000101001101101000000000000101100000111101111100110010011000010101'
#10101011101011110111101000001011011110101011100001110110011101000100001101101000000000001101100000111101111100110011011000010101
#10101011101011110101101000001011011110101011100001111110011101000101001101101000000000000101100000111101111100110010011000010101
#00110111000010011000000010010111010011001011101000000010011001001010110111010100101010101110011011000011011001110101111111010011

config = CAutil.get_config()
#initate
env = gym.make("CartPole-v1", render_mode='human')  #render_mode = 'human' (graphical)
observation, info = env.reset() #(seed=42) If sample() is to be used to randomize the actionspace, env.reset needs to be seeded for repeatability
learningTreshold = False #0.05
patience = 10

rules = dict(zip(CAutil.set_condition_list(), CAutil.initialize_rules(genome))) #0.01-0.02 ms

for _ in range(config['maxAttempts']):
    #print('New attempts')
    for _ in range(config['maxSteps']):

        observation, reward, terminated, truncated, info = env.step(CAutil.get_action(observation, rules))

        if terminated or truncated:
            observation, info = env.reset()

env.close()
